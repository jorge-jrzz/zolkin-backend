services:
  # Backend Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: zolkin
    volumes:
      - files-data:/app/files
    ports:
      - "5002:5002"
    env_file:
      - .env
    depends_on:
      - redis
      - milvus
    networks:
      - combined_network

  # Redis Service
  redis:
    image: redis/redis-stack-server:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - combined_network

  # Milvus - ETCD Service
  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.0
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
    volumes:
      - milvus-data:/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    networks:
      - combined_network

  # Milvus - MinIO Service
  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2020-12-03T00-03-10Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    volumes:
      - milvus-data:/volumes/minio:/minio_data
    command: minio server /minio_data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - combined_network

  # Milvus - Standalone Service
  milvus:
    container_name: milvus
    image: milvusdb/milvus:v2.5.0-beta
    command: ["milvus", "run", "standalone"]
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - milvus-data:/volumes/milvus:/var/lib/milvus
    ports:
      - "19530:19530"
    depends_on:
      - "etcd"
      - "minio"
    networks:
      - combined_network

volumes:
  files-data:
  milvus-data:

networks:
  combined_network:
    driver: bridge